-----------------------------------------------Testing in CRA tool----------------------------------------------------
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders App component', () => {
  render(<App />);
  const headingElement = screen.getByText(/React WIth The Testing :/i); // fixed spacing
  expect(headingElement).toBeInTheDocument();
});
and--------------------------------------Counter.test.js----------------------

import {fireEvent, render,screen} from "@testing-library/react";

import Counter from "./Counter";
import userEvent from "@testing-library/user-event"

test("Counter Components Working Properly",()=>{
    render(<Counter/>)

    const buttonElement=screen.getByText(/Click Me/i);

    fireEvent.click(buttonElement);
    const updatedCount=screen.getByText(/You Clicked Button 10 Times./i)
    expect(updatedCount).toBeInTheDocument();
});

test("Checking Button Functionality",async()=>{
    render(<Counter/>)
    expect(screen.getByText(/Count: 0/i)).toBeInTheDocument();

    const button=screen.getByRole("button",{name:/Click Me/i});

    await userEvent.click(button);
    expect(screen.getByText(/Count: 1/i)).toBeInTheDocument();

})


-------------------------------------------------------------------------------------------Calculator.test.js-----------------------------------------------------------

import { fireEvent, render,screen } from "@testing-library/react";

import Calculator from "./Calculator";


test ("Check Add : ", () =>{
    render(<Calculator/>);

    fireEvent.change(screen.getByTestId("num1"),{target:{value:"5"}});
    fireEvent.change(screen.getByTestId("num2"),{target:{value:"75"}});
    fireEvent.click(screen.getByText(/Add/i));

    expect(screen.getByTestId("result")).toHaveTextContent("Result : 80")

})
-------------------------------------------------------------------------------------------
